@charset "UTF-8";
@import "mixins/var";
@import "mixins/mixins";

@include b(alert) {
  position: relative;
  display: flex;
  align-items: center;
  box-sizing: border-box;
  width: 100%;
  margin: 0;
  padding: $alert-padding;
  border-radius: $alert-border-radius;
  background-color: $color-white;
  opacity: 1;
  overflow: hidden;
  transition: opacity .2s;

  @include when(light) {
    .liu-alert__close {
      color: $color-text-placeholder;
    }
  }

  @include when(dark) {
    .liu-alert__close {
      color: $color-white;
    }
    .liu-alert__description {
      color: $color-white;
    }
  }

  @include when(center) {
    justify-content: center;
  }

  @include e(icon) {
    font-size: $alert-icon-size;
    width: $alert-icon-size;
    @include when(big) {
      font-size: $alert-icon-large-size;
      width: $alert-icon-large-size;
    }
  }

  @include e(content) {
    display: table-cell;
    padding: 0 8px;
  }

  @include e(title) {
    font-size: $alert-title-font-size;
    line-height: 18px;
    @include when(bold) {
      font-weight: bold;
    }
  }

  @include e(description) {
    font-size: $alert-description-font-size;
    margin: 5px 0 0 0;
  }

  @include e(close) {
    position: absolute;
    top: 12px;
    right: 15px;
    cursor: pointer;
  }

  @include m(success) {
    background-color: $color-success;
    &.is-light {
      background-color: $alert-success-color;
      color: $color-success;
    }

    &.is-dark {
      background-color: $color-success;
      color: $color-white;
    }
  }

  @include m(info) {
    background-color: $color-info;
    &.is-light {
      background-color: $alert-info-color;
      color: $color-info;
    }

    &.is-dark {
      background-color: $color-info;
      color: $color-white;
    }
  }

  @include m(warning) {
    background-color: $color-warning;
    &.is-light {
      background-color: $alert-warning-color;
      color: $color-warning;
    }

    &.is-dark {
      background-color: $color-warning;
      color: $color-white;
    }
  }

  @include m(error) {
    background-color: $color-danger;
    &.is-light {
      background-color: $alert-error-color;
      color: $color-danger;
    }

    &.is-dark {
      background-color: $color-danger;
      color: $color-white;
    }
  }
}

.liu-alert-fade-enter,
.liu-alert-fade-leave-active {
  opacity: 0;
}
